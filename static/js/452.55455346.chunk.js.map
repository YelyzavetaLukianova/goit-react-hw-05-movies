{"version":3,"file":"static/js/452.55455346.chunk.js","mappings":"sSAAMA,EAAU,mCACVC,EAAU,+BAEVC,EAAc,mCAAG,wGACAC,MAAM,GAAD,OACrBF,EADqB,uCACiBD,IAFtB,cACfI,EADe,gBAIKA,EAAOC,OAJZ,uBAIbC,EAJa,EAIbA,QAJa,kBAMdA,GANc,2CAAH,qDASdC,EAAY,mCAAG,WAAMC,GAAN,2FACEL,MAAM,GAAD,OACrBF,EADqB,iCACWD,EADX,kBAC4BQ,IAFnC,cACbJ,EADa,gBAIOA,EAAOC,OAJd,uBAIXC,EAJW,EAIXA,QAJW,kBAMZA,GANY,2CAAH,sDASZG,EAAe,mCAAG,WAAMC,GAAN,uFACDP,MAAM,GAAD,OAAIF,EAAJ,kBAAqBS,EAArB,oBAAwCV,IAD5C,cAChBI,EADgB,gBAGTA,EAAOC,OAHE,mFAAH,sDAMfM,EAAiB,mCAAG,WAAMD,GAAN,2FACHP,MAAM,GAAD,OACrBF,EADqB,kBACJS,EADI,4BACuBV,IAFzB,cAClBI,EADkB,gBAIDA,EAAOC,OAJN,uBAIhBO,EAJgB,EAIhBA,KAJgB,kBAMjBA,GANiB,2CAAH,sDASjBC,EAAiB,mCAAG,WAAMH,GAAN,2FACHP,MAAM,GAAD,OACrBF,EADqB,kBACJS,EADI,4BACuBV,IAFzB,cAClBI,EADkB,gBAIEA,EAAOC,OAJT,uBAIhBC,EAJgB,EAIhBA,QAJgB,kBAMjBA,GANiB,2CAAH,uD,+JCtBjBQ,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,gCACtBC,GAAcD,EAAAA,EAAAA,OAAK,kBAAM,gCAwE/B,EAtEyB,WACvB,OAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,MACRC,GAAUC,EAAAA,EAAAA,MAUhB,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,qGACKlB,EAAAA,EAAAA,IAAgBW,EAAOV,SAD5B,OACTQ,EADS,OAEfC,EAASD,GAFM,2CAAH,qDAIdS,MACC,CAACP,EAAOV,WAGT,4BACE,mBAAQkB,UAAU,oBAAoBC,QAASL,EAAQM,OAAvD,qBAGCZ,GACC,iBAAKU,UAAU,oBAAf,UACGV,EAAMa,cACL,gBACEH,UAAU,oBACVI,IAAG,yCAAoCd,EAAMa,aAC7CE,IAAI,MAGNf,EAAMa,cACN,gBAAKH,UAAU,oBAAoBI,IAAKE,EAAUD,IAAI,MAExD,iBAAKL,UAAU,wBAAf,WACE,wBAAKV,EAAMiB,SACX,yCAAiBjB,EAAMkB,iBACvB,uBAAIlB,EAAMmB,YACV,uBAAInB,EAAMoB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,cAInD,oBAEF,cAAGd,UAAU,qBAAb,wCACA,4BACE,0BACE,SAAC,KAAD,CAASe,GAAE,UAAKrB,EAAMsB,IAAX,SAAuBhB,UAAU,GAAGiB,gBAAgB,GAA/D,qBAIF,0BACE,SAAC,KAAD,CAASF,GAAE,UAAKrB,EAAMsB,IAAX,YAA0BhB,UAAU,GAAGiB,gBAAgB,GAAlE,2BAKJ,SAAC,EAAAC,SAAD,CAAUC,SAAS,UAAnB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,OAAK,EAACC,KAAI,UAAK3B,EAAM2B,KAAX,SAAjB,UACE,SAACnC,EAAD,OAEF,SAAC,KAAD,CAAOkC,OAAK,EAACC,KAAI,UAAK3B,EAAM2B,KAAX,YAAjB,UACE,SAACjC,EAAD,OAEF,SAAC,KAAD,CAAOkC,OAAQ,kBAAM,SAAC,KAAD,CAAUP,GAAIrB,EAAMsB,mB","sources":["api.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["const API_KEY = '73e9137b2a364bbb6dc0bcf09aa07979';\r\nconst baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst getApiTranding = async () => {\r\n  const result = await fetch(\r\n    `${baseURL}/trending/movie/day?api_key=${API_KEY}`,\r\n  );\r\n  const { results } = await result.json();\r\n\r\n  return results;\r\n};\r\n\r\nconst getApiSearch = async query => {\r\n  const result = await fetch(\r\n    `${baseURL}/search/movie?api_key=${API_KEY}&query=${query}`,\r\n  );\r\n  const { results } = await result.json();\r\n\r\n  return results;\r\n};\r\n\r\nconst getApiMovieInfo = async movieId => {\r\n  const result = await fetch(`${baseURL}/movie/${movieId}?api_key=${API_KEY}`);\r\n\r\n  return await result.json();\r\n};\r\n\r\nconst getApiMovieCredit = async movieId => {\r\n  const result = await fetch(\r\n    `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n  const { cast } = await result.json();\r\n\r\n  return cast;\r\n};\r\n\r\nconst getApiMovieReview = async movieId => {\r\n  const result = await fetch(\r\n    `${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\r\n  );\r\n  const { results } = await result.json();\r\n\r\n  return results;\r\n};\r\n\r\nexport {\r\n  getApiMovieReview,\r\n  getApiMovieCredit,\r\n  getApiMovieInfo,\r\n  getApiSearch,\r\n  getApiTranding,\r\n};\r\n","import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport {\r\n  NavLink,\r\n  useParams,\r\n  useRouteMatch,\r\n  useHistory,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { getApiMovieInfo } from '../../api';\r\nimport './MovieDetailsPage.css';\r\nimport emptyImg from '../../images/not_found.jpg';\r\n\r\nconst CastPage = lazy(() => import('./CastPage/CastPage'));\r\nconst ReviewsPage = lazy(() => import('./ReviewsPage/ReviewsPage'));\r\n\r\nconst MovieDetailsPage = () => {\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getMovie = async () => {\r\n      const movie = await getApiMovieInfo(params.movieId);\r\n      setMovie(movie);\r\n    };\r\n    getMovie();\r\n  }, [params.movieId]);\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"MovieDetails__btn\" onClick={history.goBack}>\r\n        Go back\r\n      </button>\r\n      {movie ? (\r\n        <div className=\"MovieDetails__div\">\r\n          {movie.poster_path && (\r\n            <img\r\n              className=\"MovieDetails__img\"\r\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n              alt=\"\"\r\n            />\r\n          )}\r\n          {!movie.poster_path && (\r\n            <img className=\"MovieDetails__img\" src={emptyImg} alt=\"\" />\r\n          )}\r\n          <div className=\"MovieDetails__wrapper\">\r\n            <h2>{movie.title}</h2>\r\n            <h3>User score: {movie.vote_average}</h3>\r\n            <p>{movie.overview}</p>\r\n            <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        'Movie is loading'\r\n      )}\r\n      <p className=\"MovieDetails__text\">Additional Information : </p>\r\n      <nav>\r\n        <div>\r\n          <NavLink to={`${match.url}/cast`} className=\"\" activeClassName=\"\">\r\n            Cast\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          <NavLink to={`${match.url}/reviews`} className=\"\" activeClassName=\"\">\r\n            Reviews\r\n          </NavLink>\r\n        </div>\r\n      </nav>\r\n      <Suspense fallback=\"Loading\">\r\n        <Switch>\r\n          <Route exact path={`${match.path}/cast`}>\r\n            <CastPage />\r\n          </Route>\r\n          <Route exact path={`${match.path}/reviews`}>\r\n            <ReviewsPage />\r\n          </Route>\r\n          <Route render={() => <Redirect to={match.url} />} />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"names":["API_KEY","baseURL","getApiTranding","fetch","result","json","results","getApiSearch","query","getApiMovieInfo","movieId","getApiMovieCredit","cast","getApiMovieReview","CastPage","lazy","ReviewsPage","useState","movie","setMovie","params","useParams","match","useRouteMatch","history","useHistory","useEffect","getMovie","className","onClick","goBack","poster_path","src","alt","emptyImg","title","vote_average","overview","genres","map","genre","name","join","to","url","activeClassName","Suspense","fallback","exact","path","render"],"sourceRoot":""}