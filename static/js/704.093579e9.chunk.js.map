{"version":3,"file":"static/js/704.093579e9.chunk.js","mappings":"sSAAMA,EAAU,mCACVC,EAAU,+BAEVC,EAAc,mCAAG,wGACAC,MAAM,GAAD,OACrBF,EADqB,uCACiBD,IAFtB,cACfI,EADe,gBAIKA,EAAOC,OAJZ,uBAIbC,EAJa,EAIbA,QAJa,kBAMdA,GANc,2CAAH,qDASdC,EAAY,mCAAG,WAAMC,GAAN,2FACEL,MAAM,GAAD,OACrBF,EADqB,iCACWD,EADX,kBAC4BQ,IAFnC,cACbJ,EADa,gBAIOA,EAAOC,OAJd,uBAIXC,EAJW,EAIXA,QAJW,kBAMZA,GANY,2CAAH,sDASZG,EAAe,mCAAG,WAAMC,GAAN,uFACDP,MAAM,GAAD,OAAIF,EAAJ,kBAAqBS,EAArB,oBAAwCV,IAD5C,cAChBI,EADgB,gBAGTA,EAAOC,OAHE,mFAAH,sDAMfM,EAAiB,mCAAG,WAAMD,GAAN,2FACHP,MAAM,GAAD,OACrBF,EADqB,kBACJS,EADI,4BACuBV,IAFzB,cAClBI,EADkB,gBAIDA,EAAOC,OAJN,uBAIhBO,EAJgB,EAIhBA,KAJgB,kBAMjBA,GANiB,2CAAH,sDASjBC,EAAiB,mCAAG,WAAMH,GAAN,2FACHP,MAAM,GAAD,OACrBF,EADqB,kBACJS,EADI,4BACuBV,IAFzB,cAClBI,EADkB,gBAIEA,EAAOC,OAJT,uBAIhBC,EAJgB,EAIhBA,QAJgB,kBAMjBA,GANiB,2CAAH,uD,6ICevB,EA9CkB,SAAC,GAA6B,IAA3BQ,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC7B,GAAkCC,EAAAA,EAAAA,UAASD,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAeA,OACE,+BACE,mBAAQC,UAAU,YAAlB,UACE,kBAAMA,UAAU,aAAaL,SAZd,SAAAM,GACnBA,EAAEC,iBACuB,KAArBJ,EAAUK,OAIdR,EAASG,GAHPM,MAAM,2BASJ,WACE,kBACEC,KAAK,YACLC,MAAOR,EACPE,UAAU,oBACVO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAzBgB,SAAAV,GACxBF,EAAaE,EAAEW,OAAON,MAAMO,mBA0BtB,oBAAQN,KAAK,SAASP,UAAU,qBAAhC,WACE,iBAAMA,UAAU,4BAAhB,qBACA,SAAC,MAAD,e,SCKZ,EAnCmB,WACjB,OAAkCH,EAAAA,EAAAA,WAChC,kCCDQ,SAAAiB,GACV,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQJ,IACvC,MAAOK,GACP,OAAO,MDHDC,CAAY,oBAAlB,QAAkC,MADpC,eAAOtB,EAAP,KAAkBC,EAAlB,KAGA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOwB,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKzB,EAAL,CACA,IAAM0B,EAAS,mCAAG,qGACKpC,EAAAA,EAAAA,IAAaU,GADlB,OACVuB,EADU,OAEhBC,EAAUD,GAFM,2CAAH,qDAIfG,OACC,CAAC1B,IAOJ,OACE,4BACE,SAAC,EAAD,CAAWH,SAPM,SAAAG,ICtBV,SAACgB,EAAKR,GACjB,IACEW,aAAaQ,QAAQX,EAAKC,KAAKW,UAAUpB,IACzC,MAAOa,GACP,OAAO,MDmBPC,CAAa,YAAatB,GAC1BC,EAAaD,IAKwBF,UAAWE,KAE9C,eAAIE,UAAU,mBAAd,SACGqB,EAAOM,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME","sources":["api.js","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","services/localStorage.js"],"sourcesContent":["const API_KEY = '73e9137b2a364bbb6dc0bcf09aa07979';\r\nconst baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst getApiTranding = async () => {\r\n  const result = await fetch(\r\n    `${baseURL}/trending/movie/day?api_key=${API_KEY}`,\r\n  );\r\n  const { results } = await result.json();\r\n\r\n  return results;\r\n};\r\n\r\nconst getApiSearch = async query => {\r\n  const result = await fetch(\r\n    `${baseURL}/search/movie?api_key=${API_KEY}&query=${query}`,\r\n  );\r\n  const { results } = await result.json();\r\n\r\n  return results;\r\n};\r\n\r\nconst getApiMovieInfo = async movieId => {\r\n  const result = await fetch(`${baseURL}/movie/${movieId}?api_key=${API_KEY}`);\r\n\r\n  return await result.json();\r\n};\r\n\r\nconst getApiMovieCredit = async movieId => {\r\n  const result = await fetch(\r\n    `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n  const { cast } = await result.json();\r\n\r\n  return cast;\r\n};\r\n\r\nconst getApiMovieReview = async movieId => {\r\n  const result = await fetch(\r\n    `${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\r\n  );\r\n  const { results } = await result.json();\r\n\r\n  return results;\r\n};\r\n\r\nexport {\r\n  getApiMovieReview,\r\n  getApiMovieCredit,\r\n  getApiMovieInfo,\r\n  getApiSearch,\r\n  getApiTranding,\r\n};\r\n","import { useState } from 'react';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport PropTypes from 'prop-types';\r\nimport '../Searchbar/Searchbar.css';\r\n\r\nconst Searchbar = ({ onSubmit, initValue }) => {\r\n  const [movieName, setMovieName] = useState(initValue);\r\n\r\n  const handleMovieChange = e => {\r\n    setMovieName(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (movieName.trim() === '') {\r\n      alert('Enter what do You want');\r\n      return;\r\n    }\r\n    onSubmit(movieName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n          <input\r\n            name=\"imageName\"\r\n            value={movieName}\r\n            className=\"SearchForm__input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={handleMovieChange}\r\n          />\r\n          <button type=\"submit\" className=\"SearchForm__button\">\r\n            <span className=\"SearchForm__button__label\">Search</span>\r\n            <ImSearch />\r\n          </button>\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Searchbar;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as storage from '../../services/localStorage';\r\nimport Searchbar from '../../components/Searchbar/Searchbar';\r\nimport { getApiSearch } from '../../api';\r\nimport './MoviesPage.css';\r\n\r\nconst MoviesPage = () => {\r\n  const [movieName, setMovieName] = useState(\r\n    () => storage.get('movieName') ?? '',\r\n  );\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!movieName) return;\r\n    const getMovies = async () => {\r\n      const movies = await getApiSearch(movieName);\r\n      setMovies(movies);\r\n    };\r\n    getMovies();\r\n  }, [movieName]);\r\n\r\n  const handleSubmit = movieName => {\r\n    storage.save('movieName', movieName);\r\n    setMovieName(movieName);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSubmit={handleSubmit} initValue={movieName} />\r\n\r\n      <ul className=\"MoviesPage__item\">\r\n        {movies.map(movie => (\r\n          <li key={movie.id}>\r\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n"],"names":["API_KEY","baseURL","getApiTranding","fetch","result","json","results","getApiSearch","query","getApiMovieInfo","movieId","getApiMovieCredit","cast","getApiMovieReview","onSubmit","initValue","useState","movieName","setMovieName","className","e","preventDefault","trim","alert","name","value","type","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","key","JSON","parse","localStorage","getItem","error","storage","movies","setMovies","useEffect","getMovies","setItem","stringify","map","movie","to","id","title"],"sourceRoot":""}